apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: demo-devops-nodejs
  namespace: devops
  name: demo-devops-nodejs
spec:
  selector:
    matchLabels:
      app: demo-devops-nodejs
  strategy: {}
  template:
    metadata:
      labels:
        app: demo-devops-nodejs
    spec:
      securityContext:
        runAsUser: 1010
        runAsGroup: 1010
        fsGroup: 1010
      containers:
      - image: rentgonz/demo-devops-nodejs:77ff7d8d7a
        name: demo-devops-nodejs
        ports:
        - name: liveness-port
          containerPort: 8000
        livenessProbe:
          httpGet:
            path: /healthz
            port: liveness-port
          failureThreshold: 3
          periodSeconds: 10
          initialDelaySeconds: 30
          terminationGracePeriodSeconds: 30
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            path: /healthz
            port: liveness-port
          failureThreshold: 3
          timeoutSeconds: 3
          periodSeconds: 10
          initialDelaySeconds: 30
        # Si la aplicacion es muy lenta se recomienda usar el startupProbe.
        # startupProbe:
        #   httpGet:
        #     path: /healthz
        #     port: liveness-port
        #   failureThreshold: 30
        #   periodSeconds: 10
        env:
        - name: PORT
          value: "8000"
        envFrom:
        - secretRef:
            name: demo-devops-nodejs
        resources:
          requests:
            memory: 256Mi
            cpu: 200m
          limits:
            memory: 512Mi
            cpu: 400m
            ephemeral-storage: "1Gi"
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
        volumeMounts:
        - name: tmp
          mountPath: /tmp
      volumes:
      - name: tmp
        emptyDir: {}
