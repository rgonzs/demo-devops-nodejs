on:
  push:
jobs:
  test_app:
    name: Testing Application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install dependencies
        run: npm ci
      - name: Test NodeJS app
        run: npm run test

  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build:
    name: Build Node App
    needs: [test_app, sonarcloud]
    runs-on: ubuntu-latest
    outputs:
      IMAGE_TAG: ${{ steps.image.outputs.IMAGE_TAG }}
      IMAGE_REPO: ${{ steps.image.outputs.IMAGE_REPO }}
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Define image tag from commit sha
        id: image
        run: |
          IMAGE_TAG=`echo ${GITHUB_SHA} | cut -b -10`
          echo IMAGE_TAG=$IMAGE_TAG >> "$GITHUB_ENV"
          echo IMAGE_TAG=$IMAGE_TAG >> "$GITHUB_OUTPUT"

          IMAGE_REPO=`echo ${GITHUB_REPOSITORY} | cut -d '/' -f 2`
          echo IMAGE_REPO=$IMAGE_REPO >> "$GITHUB_ENV"
          echo IMAGE_REPO=$IMAGE_REPO >> "$GITHUB_OUTPUT"
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: rentgonz/${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}

  validate:
    name: Validate docker image
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        env:
          IMAGE_TAG: ${{ needs.build.outputs.IMAGE_TAG }}
          IMAGE_REPO: ${{ needs.build.outputs.IMAGE_REPO }}
        with:
          image-ref: rentgonz/${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}
          format: "table"
          exit-code: "1"
          ignore-unfixed: true
          vuln-type: "os,library"
          severity: "CRITICAL,HIGH"

  deploy:
    name: Deploy to kubernetes
    needs: [validate]
    runs-on: ubuntu-latest
    env:
      IMAGE_TAG: ${{ needs.build.outputs.IMAGE_TAG }}
      IMAGE_REPO: ${{ needs.build.outputs.IMAGE_REPO }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-hub/kubectl@master
      - name: AWS Login
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Download kubeconfig
        run: aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ env.CLUSTER_NAME }}
      - name: Replace tag in manifests
        run: |
          sed -i 's|image:.*|image: rentgonz/${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}|g' kubernetes/deployment.yaml
      - name: Apply manifests to cluster.
        run: |
          kubectl apply -f kubernetes
      - name: Save manifests to github.
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add kubernetes
          git commit -m "Image changed to rentgonz/${{ env.IMAGE_REPO }}:${{ env.IMAGE_TAG }}"
          git push
